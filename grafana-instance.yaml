apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: grafana-proxy
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: authorization.openshift.io/v1
kind: ClusterRoleBinding
metadata:
  name: grafana-proxy
roleRef:
  name: grafana-proxy
subjects:
- kind: ServiceAccount
  name: grafana-sa
  namespace: gallery
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    config.openshift.io/inject-trusted-cabundle: "true"
  name: ocp-injected-certs
  namespace: gallery
---
apiVersion: v1
data:
  session_secret: Y2hhbmdlIG1lCg==
kind: Secret
metadata:
  name: grafana-k8s-proxy
  namespace: gallery
type: Opaque
---
apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  labels:
    dashboards: grafana
  name: grafana
  namespace: gallery
spec:
  client:
    preferIngress: false
  config:
    auth:
      disable_login_form: "True"
      disable_signout_menu: "True"
    auth.anonymous:
      enabled: "False"
    auth.basic:
      enabled: "True"
    auth.proxy:
      enable_login_token: "True"
      enabled: "True"
      header_name: X-Forwarded-User
      header_property: username
    log:
      mode: console
  deployment:
    spec:
      template:
        spec:
          containers:
          - args:
            - -provider=openshift
            - -pass-basic-auth=false
            - -https-address=:9091
            - -http-address=
            - -email-domain=*
            - -upstream=http://localhost:3000
            - '-openshift-sar={"resource": "namespaces", "verb": "get"}'
            - '-openshift-delegate-urls={"/": {"resource": "namespaces", "verb": "get"}}'
            - -tls-cert=/etc/tls/private/tls.crt
            - -tls-key=/etc/tls/private/tls.key
            - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
            - -cookie-secret-file=/etc/proxy/secrets/session_secret
            - -openshift-service-account=grafana-sa
            - -openshift-ca=/etc/pki/tls/cert.pem
            - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            - -openshift-ca=/etc/proxy/certs/ca-bundle.crt
            - -skip-auth-regex=^/metrics
            image: quay.io/openshift/origin-oauth-proxy
            name: grafana-proxy
            ports:
            - containerPort: 9091
              name: https
            resources: {}
            volumeMounts:
            - mountPath: /etc/tls/private
              name: grafana-tls
              readOnly: false
            - mountPath: /etc/proxy/secrets
              name: grafana-proxy
              readOnly: false
            - mountPath: /etc/proxy/certs
              name: ocp-injected-certs
              readOnly: false
          volumes:
          - name: grafana-tls
            secret:
              secretName: grafana-k8s-tls
          - name: grafana-proxy
            secret:
              secretName: grafana-k8s-proxy
          - configMap:
              name: ocp-injected-certs
            name: ocp-injected-certs
  route:
    spec:
      port:
        targetPort: https
      tls:
        termination: reencrypt
      to:
        kind: Service
        name: grafana-service
        weight: 100
      wildcardPolicy: None
  service:
    metadata:
      annotations:
        service.beta.openshift.io/serving-cert-secret-name: grafana-k8s-tls
    spec:
      ports:
      - name: https
        port: 9091
        protocol: TCP
        targetPort: https
  serviceAccount:
    metadata:
      annotations:
        serviceaccounts.openshift.io/oauth-redirectreference.primary: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"grafana-route"}}'
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: grafana-service
  namespace: gallery
spec:
  host: grafana-service
  trafficPolicy:
    tls:
      mode: DISABLE
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: grafana
  namespace: gallery
spec:
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          network.openshift.io/policy-group: ingress
  podSelector:
    matchLabels:
      app: grafana
  policyTypes:
  - Ingress
